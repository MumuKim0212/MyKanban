name: CD
on:
  workflow_run:
    workflows: [CI]
    branches: [main]
    types: [completed]
jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Server Build
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: server-build
          path: server-dist
          
      - name: Download Client Build
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: client-build
          path: client-build
          
      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy
        run: |
          # 서버 디렉토리 준비
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "mkdir -p ~/app/server"
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "rm -rf ~/app/server/*"
          
          # 서버 파일 복사
          scp -r server-dist/* Server/package.json ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/app/server/
          
          # 서버 의존성 설치
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd ~/app/server && npm install --production"
          
          # 클라이언트 배포
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "mkdir -p ~/app/client"
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "rm -rf ~/app/client/*"
          scp -r client-build/* ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/app/client/
          
          # 권한 설정
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "chmod -R 755 ~/app"
          
          # 서버 재시작
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "pm2 restart all || pm2 start ~/app/server/app.js"
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "sudo systemctl restart nginx"